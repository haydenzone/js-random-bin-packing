<style>
td { 
	width: 20px;
	height: 20px;
	border: 1px solid black;
}
</style>
<table class="output">
</table>
<script src="jquery-2.1.1.js"></script>
<script src="DoublyLinkedList.js"></script>
<script src="underscore.js"></script>
<script src="RandomBinPacker.js"></script>
<script src="util.js"></script>
<script>
_(50).times(function() { 
	var $row = $('<tr>');
	_(50).times(function() { 
		$row.append('<td></td>');
	})
	$row.appendTo('.output');
});
function setColor(x,y, color) { 
	$('.output tr').eq(y).find('td').eq(x).css('background-color', color);
}
var dimensions = [
	[2,2],
	[3,1],
	[2,1],
	[1,2],
	[1,1]
];

function chooseRandomColor() {
	return '#' + (function co(lor){   return (lor += [0,1,2,3,4,5,6,7,8,9,'a','b','c','d','e','f'][Math.floor(Math.random()*16)]) && (lor.length == 6) ?  lor : co(lor); })('');
}




var binPacker = new RandomBinPacker({
	dimensions: dimensions,
	width: 50,
	height:50 
});



var output = _(50).times(function() { 
	return _(50).times(function(){ 
		return 0;
	});
});

_(dimensions).each(function(dimension) { 
	_(225).times(function(slot_i) { 
		var color = chooseRandomColor();
		var slot = binPacker.getSpot(dimension[1], dimension[0]);
		if(!slot) { 
			return;
		}
		_.por(slot.height, slot.width, function(i,j) { 
			if(_(output).hasIndex(i+slot.y,j+slot.x)) { 
				if(output[i+slot.y][j+slot.x] !== 0) {
					throw "Marking taken spot";
				}
				output[i+slot.y][j+slot.x]= slot.width*slot.height;
				setColor(i+slot.y,j+slot.x, color);
			}
		}.bind(this));

	})
});



</script>